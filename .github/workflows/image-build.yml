name: Image build

on:
  push:
    paths:
      - docker/*

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
      
jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3  # https://github.com/docker/setup-qemu-action
      - 
        name: Set up Docker
        uses: docker/setup-buildx-action@v3  # https://github.com/docker/setup-buildx-action
      - 
        name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4.5.0
      - 
        name: Read versions
        id: versions
        run: |
          awk -f .github/versions.awk docker/Dockerfile >> $GITHUB_OUTPUT
      - 
        name: Login to registry ${{ env.REGISTRY }}
        if: ${{ github.ref_name == 'main' }}
        uses: docker/login-action@v3  # https://github.com/docker/login-action
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Extract Docker metadata
        id: metadata
        if: ${{ github.ref_name == 'main' }}
        uses: docker/metadata-action@v5  # https://github.com/docker/metadata-action
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - 
        name: Build init
        uses: docker/build-push-action@v6  # https://github.com/docker/build-push-action
        env:
          TARGET: init # Set the target value here
        with:
          push: ${{ github.ref_name == 'main' }}
          target: ${{ env.TARGET }}
          context: docker
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.TARGET }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.TARGET }}:${{ steps.versions.outputs.GLPI_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - 
        name: Build php-fpm
        uses: docker/build-push-action@v6  # https://github.com/docker/build-push-action
        env:
          TARGET: php-fpm # Set the target value here
        with:
          push: ${{ github.ref_name == 'main' }}
          target: ${{ env.TARGET }}
          context: docker
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.TARGET }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.TARGET }}:${{ steps.versions.outputs.GLPI_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - 
        name: Build cron
        uses: docker/build-push-action@v6  # https://github.com/docker/build-push-action
        env:
          TARGET: cron # Set the target value here
        with:
          push: ${{ github.ref_name == 'main' }}
          target: ${{ env.TARGET }}
          context: docker
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.TARGET }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.TARGET }}:${{ steps.versions.outputs.GLPI_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - 
        name: Build nginx
        uses: docker/build-push-action@v6  # https://github.com/docker/build-push-action
        env:
          TARGET: nginx # Set the target value here
        with:
          push: ${{ github.ref_name == 'main' }}
          target: ${{ env.TARGET }}
          context: docker
          platforms: linux/amd64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.TARGET }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ env.TARGET }}:${{ steps.versions.outputs.GLPI_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        