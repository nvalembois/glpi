apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: glpi-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: glpi
  labels:
    app: glpi
spec:
  selector:
    matchLabels:
      app: glpi
      glpi-mariadb-client: "true"
  replicas: 1 
  template: 
    metadata:
      labels:
        app: glpi
        glpi-mariadb-client: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/storage
                operator: In
                values:
                 - "true"
      securityContext:
        fsGroup: 10001
        runAsNonRoot: true
      volumes:
      - name: glpi-data
        persistentVolumeClaim:
          claimName: glpi-data
      - name: init
        configMap:
          name: glpi-init
      - name: socket
        emptyDir:
          sizeLimit: 100Mi
      hostname: glpi
      initContainers:
      - name: init
        imagePullPolicy: Always
        image: ghcr.io/nvalembois/glpi-init:10.0.17
        env:
        - name: MARIADB_HOST
          value: "glpi-mariadb"
        - name: MARIADB_USER
          value: "glpi"
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: glpi-mariadb
              key: mariadb-password
        - name: MARIADB_DATABASE
          value: "glpi"
        - name: GLPI_TELEMETRY
          value: "no"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - mountPath: /data
          name: glpi-data
        - mountPath: /init
          name: init
      containers:
      - name: nginx
        imagePullPolicy: Always
        image: ghcr.io/nvalembois/glpi-nginx:10.0.17
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - mountPath: /run/php
          name: socket
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      - name: php-fpm
        imagePullPolicy: Always
        image: ghcr.io/nvalembois/glpi-php-fpm:10.0.17
        volumeMounts:
        - mountPath: /data
          name: glpi-data
        - mountPath: /run/php
          name: socket
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      - name: cron
        imagePullPolicy: Always
        image: ghcr.io/nvalembois/glpi-cron:10.0.17
        volumeMounts:
        - mountPath: /data
          name: glpi-data
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: glpi
  name: glpi
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: glpi
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: ingress-issuer
    cert-manager.io/common-name: glpi.local
  labels:
    app: glpi
  name: glpi
spec:
  ingressClassName: contour
  rules:
  - host: glpi.local
    http:
      paths:
      - backend:
          service:
            name: glpi
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - glpi.local
    secretName: glpi.local-tls
